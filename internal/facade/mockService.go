// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/calebtracey/go-scraper/internal/facade (interfaces: ServiceI)

// Package facade is a generated GoMock package.
package facade

import (
	context "context"
	reflect "reflect"

	models "github.com/calebtracey/go-scraper/internal/models"
	gomock "github.com/golang/mock/gomock"
)

// MockServiceI is a mock of ServiceI interface.
type MockServiceI struct {
	ctrl     *gomock.Controller
	recorder *MockServiceIMockRecorder
}

// MockServiceIMockRecorder is the mock recorder for MockServiceI.
type MockServiceIMockRecorder struct {
	mock *MockServiceI
}

// NewMockServiceI creates a new mock instance.
func NewMockServiceI(ctrl *gomock.Controller) *MockServiceI {
	mock := &MockServiceI{ctrl: ctrl}
	mock.recorder = &MockServiceIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServiceI) EXPECT() *MockServiceIMockRecorder {
	return m.recorder
}

// GetData mocks base method.
func (m *MockServiceI) GetData(arg0 context.Context, arg1 models.ScrapeRequest) models.ScrapeResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetData", arg0, arg1)
	ret0, _ := ret[0].(models.ScrapeResponse)
	return ret0
}

// GetData indicates an expected call of GetData.
func (mr *MockServiceIMockRecorder) GetData(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetData", reflect.TypeOf((*MockServiceI)(nil).GetData), arg0, arg1)
}
